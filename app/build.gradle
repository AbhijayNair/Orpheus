/*
 * Copyright (C) 2014 OpenSilk Productions LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'com.android.application'
apply plugin: 'hugo'

// Versioning
def versionMajor = 0
def versionMinor = 5
def versionPatch = 6
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

assert(versionMinor < 100) // Double digits
assert(versionPatch < 100) // Double digits
assert(versionBuild < 100) // Double digits

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "org.opensilk.music"
        minSdkVersion 15
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
        versionName String.format("%d.%d.%d", versionMajor, versionMinor, versionPatch)
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['../src']
            resources.srcDirs = ['../src']
            aidl.srcDirs = ['../src']
            renderscript.srcDirs = ['../src']
            res.srcDirs = ['../res','../res-new-themes','../res-new']
            assets.srcDirs = ['../assets']
        }
        debug {
            manifest.srcFile 'variants/debug/AndroidManifest.xml'
            res.srcDirs = ['variants/debug/res']
        }
        release {
            manifest.srcFile 'variants/release/AndroidManifest.xml'
            res.srcDirs = ['variants/release/res']
        }
    }

    signingConfigs {
        release {
            def Properties keyProps = new Properties()
            keyProps.load(new FileInputStream(file('../../KeyStore/release2.properties')))
            storeFile file(keyProps["store"])
            keyAlias keyProps["alias"]
            storePassword keyProps["storePass"]
            keyPassword keyProps["pass"]
        }
        debug {
            def Properties keyProps = new Properties()
            keyProps.load(new FileInputStream(file('../../KeyStore/debug2.properties')))
            storeFile file(keyProps["store"])
            keyAlias keyProps["alias"]
            storePassword keyProps["storePass"]
            keyPassword keyProps["pass"]
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "${gitSha()}".isEmpty() ? "-SNAPSHOT" : "-SNAPSHOT-${gitSha()}"
            buildConfigField "String", "MUSIC_AUTHORITY", "\"org.opensilk.music.provider.debug\""
            buildConfigField "String", "ARTWORK_AUTHORITY", "\"org.opensilk.music.artwork.provider.debug\""
            runProguard false //true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField "String", "MUSIC_AUTHORITY", "\"org.opensilk.music.provider\""
            buildConfigField "String", "ARTWORK_AUTHORITY", "\"org.opensilk.music.artwork.provider\""
            runProguard false //true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    useOldManifestMerger true

}

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    compile 'com.android.support:support-v4:21.0.0'
    compile 'com.android.support:appcompat-v7:21.0.0'
    compile 'com.android.support:cardview-v7:21.0.0'
    compile 'com.android.support:palette-v7:21.0.0'
    compile 'com.android.support:mediarouter-v7:21.0.0'
    compile 'com.google.android.gms:play-services:6.1.11'
    compile 'com.github.gabrielemariotti.cards:library:1.7.4-SNAPSHOT@aar'
    compile 'com.github.gabrielemariotti.cards:library-extra:1.7.4-SNAPSHOT@aar'
    compile 'com.etsy.android.grid:library:1.0.5'
    compile 'com.jakewharton:disklrucache:2.0.2'
    compile 'commons-io:commons-io:2.4'
    compile 'com.github.gabrielemariotti.changeloglib:library:1.4.0'
    compile 'com.google.android.apps.muzei:muzei-api:+'
    compile 'com.squareup:otto:1.3.4'
    compile 'com.jakewharton:butterknife:5.1.0'
    compile 'com.jakewharton.timber:timber:2.3.0'
    compile 'com.squareup.mortar:mortar:0.16'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.squareup.flow:flow:0.8'
    provided 'com.squareup.dagger:dagger-compiler:1.2.1'
    compile 'com.squareup.dagger:dagger:1.2.1'
    compile 'io.reactivex:rxandroid:0.22.0'

    compile 'com.sothree.slidinguppanel:library:2.0-SNAPSHOT@aar'
    compile 'com.mobeta.android.dslv:library:0.6.1-SNAPSHOT@aar'
    compile 'com.android.volley:volley:1.0-SNAPSHOT@aar'
    compile 'com.triggertrap:seekarc:1.0-SNAPSHOT@aar'

    compile 'org.opensilk.silkdagger:libsilkdagger:0.2.2-SNAPSHOT@aar'
    compile 'org.opensilk:silkcastservice:0.2.2-SNAPSHOT@aar'
    compile 'org.opensilk:silkfilebrowser:0.1.1-SNAPSHOT@aar'
//    compile project(':../SilkCastService:library')
//    compile project(':../SilkFileBrowser:lib_sfb')

    compile 'com.bugsense.trace:bugsense:3.6.1'

    compile project(':api')

//    compile fileTree(dir: '../libs', include: ['*.jar'])

}