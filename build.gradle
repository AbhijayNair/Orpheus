buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.9.+'
        classpath 'com.jakewharton.hugo:hugo-plugin:1.0.1'
    }
}
apply plugin: 'android'
apply plugin: 'hugo'

repositories {
    maven { url "../m2/repository" }
    mavenCentral()
}

def versionMajor = 0
def versionMinor = 4
def versionPatch = 0
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

assert(versionMinor < 100) // Double digits
assert(versionPatch < 100) // Double digits
assert(versionBuild < 100) // Double digits

def gitSha() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.3"

//    lintOptions {
//        abortOnError false
//    }

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
        versionName String.format("%d.%d.%d", versionMajor, versionMinor, versionPatch)
        packageName "org.opensilk.music"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res','res-new-themes','res-new']
            assets.srcDirs = ['assets']
        }
        debug {
            manifest.srcFile 'flavors/debug/AndroidManifest.xml'
            res.srcDirs = ['flavors/debug/res']
        }
        release {
            manifest.srcFile 'flavors/release/AndroidManifest.xml'
            res.srcDirs = ['flavors/release/res']
        }
    }

    signingConfigs {
        release {
            def Properties keyProps = new Properties()
            keyProps.load(new FileInputStream(file('../KeyStore/release.properties')))
            storeFile file(keyProps["store"])
            keyAlias keyProps["alias"]
            storePassword keyProps["storePass"]
            keyPassword keyProps["pass"]
        }
        debug {
            def Properties keyProps = new Properties()
            keyProps.load(new FileInputStream(file('../KeyStore/debug.properties')))
            storeFile file(keyProps["store"])
            keyAlias keyProps["alias"]
            storePassword keyProps["storePass"]
            keyPassword keyProps["pass"]
        }
    }

    buildTypes {
        debug {
            packageNameSuffix ".debug"
            versionNameSuffix "${gitSha()}".isEmpty() ? "-SNAPSHOT" : "-SNAPSHOT-${gitSha()}"
            buildConfigField "String", "MUSIC_AUTHORITY", "\"org.opensilk.music.provider.debug\""
            buildConfigField "String", "ARTWORK_AUTHORITY", "\"org.opensilk.music.artwork.provider.debug\""
            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField "String", "MUSIC_AUTHORITY", "\"org.opensilk.music.provider\""
            buildConfigField "String", "ARTWORK_AUTHORITY", "\"org.opensilk.music.artwork.provider\""
            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
    }

}

dependencies {
    compile 'com.android.support:support-v4:19.+'
    compile 'com.github.gabrielemariotti.cards:library:1.3.0'
    compile 'com.android.support:appcompat-v7:19.+'
    compile 'com.android.support:mediarouter-v7:19.+'
    compile 'com.google.android.gms:play-services:4.2.+'
    compile 'com.jakewharton:disklrucache:2.0.2'
    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'com.github.gabrielemariotti.changeloglib:library:1.4.0'
    compile 'com.google.android.apps.muzei:muzei-api:+'

    compile 'com.sothree.slidinguppanel:library:1.0.0-SNAPSHOT'
    compile 'com.mobeta.android.dslv:library:0.6.1-SNAPSHOT'
    compile 'com.github.manuelpeinado.fadingactionbar:fadingactionbar:3.1.2-SNAPSHOT'
    compile 'com.github.manuelpeinado.fadingactionbar:fadingactionbar-abc:3.1.2-SNAPSHOT'

    compile project(':../SilkCastService:library')
    compile project('../volley:volley')
}